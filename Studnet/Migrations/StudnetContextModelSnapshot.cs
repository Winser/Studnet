// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Studnet.Context;

namespace Studnet.Migrations
{
    [DbContext(typeof(StudnetContext))]
    partial class StudnetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "C")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Studnet.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Studnet.Models.Complaint", b =>
                {
                    b.Property<int>("Userid")
                        .HasColumnType("integer");

                    b.Property<int>("Fileid")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Userid", "Fileid");

                    b.HasIndex("Fileid");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("Studnet.Models.Discussions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Facultyid")
                        .HasColumnType("integer");

                    b.Property<int>("Groupid")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Universityid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Facultyid");

                    b.HasIndex("Groupid");

                    b.HasIndex("Universityid");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("Studnet.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Universityid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Universityid");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("Studnet.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<bool>("Isanon")
                        .HasColumnType("boolean");

                    b.Property<int?>("Likecount")
                        .HasColumnType("integer");

                    b.Property<int>("Userid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Userid");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Studnet.Models.FileSubject", b =>
                {
                    b.Property<int>("Fileid")
                        .HasColumnType("integer");

                    b.Property<int>("Subjectid")
                        .HasColumnType("integer");

                    b.HasKey("Fileid", "Subjectid")
                        .HasName("file_subject_pkey");

                    b.HasIndex("Subjectid");

                    b.ToTable("FileSubjects");
                });

            modelBuilder.Entity("Studnet.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Facultyid")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Facultyid");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Studnet.Models.Like", b =>
                {
                    b.Property<int>("Userid")
                        .HasColumnType("integer");

                    b.Property<int>("Fileid")
                        .HasColumnType("integer");

                    b.HasKey("Userid", "Fileid")
                        .HasName("Like_pkey");

                    b.HasIndex("Fileid");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("Studnet.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FromId")
                        .HasColumnType("integer");

                    b.Property<string>("Message1")
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("interval");

                    b.Property<int>("ToId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Studnet.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Discusionid")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("interval");

                    b.Property<int>("Userid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Discusionid");

                    b.HasIndex("Userid");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Studnet.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Discusionid")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Discusionid");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Studnet.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("Studnet.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Facultyid")
                        .HasColumnType("integer");

                    b.Property<int?>("Groupid")
                        .HasColumnType("integer");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int?>("Universityid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Facultyid");

                    b.HasIndex("Groupid");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("Universityid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Studnet.Models.Complaint", b =>
                {
                    b.HasOne("Studnet.Models.File", "File")
                        .WithMany("Complaints")
                        .HasForeignKey("Fileid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Studnet.Models.User", "User")
                        .WithMany("Complaints")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Studnet.Models.Discussions", b =>
                {
                    b.HasOne("Studnet.Models.Faculty", "Faculty")
                        .WithMany("Discussions")
                        .HasForeignKey("Facultyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Studnet.Models.Group", "Group")
                        .WithMany("Discussions")
                        .HasForeignKey("Groupid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Studnet.Models.University", "University")
                        .WithMany("Discussions")
                        .HasForeignKey("Universityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");

                    b.Navigation("Group");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Studnet.Models.Faculty", b =>
                {
                    b.HasOne("Studnet.Models.University", "University")
                        .WithMany("Faculties")
                        .HasForeignKey("Universityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("Studnet.Models.File", b =>
                {
                    b.HasOne("Studnet.Models.User", "User")
                        .WithMany("Files")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Studnet.Models.FileSubject", b =>
                {
                    b.HasOne("Studnet.Models.File", "File")
                        .WithMany("FileSubjects")
                        .HasForeignKey("Fileid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Studnet.Models.Subject", "Subject")
                        .WithMany("FileSubjects")
                        .HasForeignKey("Subjectid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Studnet.Models.Group", b =>
                {
                    b.HasOne("Studnet.Models.Faculty", "Faculty")
                        .WithMany("Groups")
                        .HasForeignKey("Facultyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Studnet.Models.Like", b =>
                {
                    b.HasOne("Studnet.Models.File", "File")
                        .WithMany("Likes")
                        .HasForeignKey("Fileid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Studnet.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Studnet.Models.Message", b =>
                {
                    b.HasOne("Studnet.Models.User", "From")
                        .WithMany("MessageFrom")
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Studnet.Models.User", "To")
                        .WithMany("MessageTo")
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("Studnet.Models.Post", b =>
                {
                    b.HasOne("Studnet.Models.Discussions", "Discussions")
                        .WithMany("Posts")
                        .HasForeignKey("Discusionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Studnet.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discussions");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Studnet.Models.Subject", b =>
                {
                    b.HasOne("Studnet.Models.Discussions", "Discussions")
                        .WithMany("Subjects")
                        .HasForeignKey("Discusionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discussions");
                });

            modelBuilder.Entity("Studnet.Models.University", b =>
                {
                    b.HasOne("Studnet.Models.City", "City")
                        .WithMany("Universities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Studnet.Models.User", b =>
                {
                    b.HasOne("Studnet.Models.Faculty", "Faculty")
                        .WithMany("Users")
                        .HasForeignKey("Facultyid");

                    b.HasOne("Studnet.Models.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("Groupid");

                    b.HasOne("Studnet.Models.University", "University")
                        .WithMany("Users")
                        .HasForeignKey("Universityid");

                    b.Navigation("Faculty");

                    b.Navigation("Group");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Studnet.Models.City", b =>
                {
                    b.Navigation("Universities");
                });

            modelBuilder.Entity("Studnet.Models.Discussions", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("Studnet.Models.Faculty", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Groups");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Studnet.Models.File", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("FileSubjects");

                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Studnet.Models.Group", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Studnet.Models.Subject", b =>
                {
                    b.Navigation("FileSubjects");
                });

            modelBuilder.Entity("Studnet.Models.University", b =>
                {
                    b.Navigation("Discussions");

                    b.Navigation("Faculties");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Studnet.Models.User", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("Files");

                    b.Navigation("Likes");

                    b.Navigation("MessageFrom");

                    b.Navigation("MessageTo");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
